name: Checks

on:
  pull_request:
      types: [opened, reopened, synchronize, ready_for_review]
      paths:
        - 'classy_config/**'
        - 'tests/**'
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8, "3.10"]

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Analyse code with flake8
        run: poetry run flake8 classy_config/ -j 0
          

      - name: Analysing code with pyright
        run: poetry run pyright classy_config/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]
    steps:

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Test with pytest
        run: poetry run pytest --doctest-modules --junitxml=junit/test-results.xml --cov=classy_config tests/

      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}  # Use always() to always run this step to publish test results when there are test failures
        with:
          name: checks
          path: |
            junit/test-results.xml
            .coverage